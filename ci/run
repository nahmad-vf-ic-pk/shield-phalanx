#!/bin/bash
#
# ci/run
#
# CI/CD component for deploying Phalanx with a new candidard
# SHIELD distribution, and running errands against it.
#
# author:  James Hunt <james@niftylogic.com>
# created: 2017-02-04
#

header() {
	echo
	echo "###############################################"
	echo
	echo $*
	echo
}

header "Connecting to BOSH..."
bosh env

VERSION=$(cat $VERSION/version)

set -e
pushd ${SHIELD} &>/dev/null
header "Creating a new SHIELD distribution, v${VERSION}..."

ROOT=$(pwd)
GOPATH=${ROOT%%/gopath/*}/gopath
PATH="${PATH}:${GOPATH}/bin"
echo "  (Using GOPATH ${GOPATH})"
go get github.com/mitchellh/gox
make release
popd &>/dev/null

cp ${SHIELD}/artifacts/shield-server-linux-amd64.tar.gz \
   ${PHALANX}/src/shield-rc/shield-server-linux-amd64.tar.gz

pushd ${PHALANX} &>/dev/null
header "Deploying Phalanx for SHIELD v${VERSION}..."

header "Cleaning up from any previous deployments..."
bosh delete-deployment -n || echo "continuing on..."

header "Creating candidate BOSH release..."
bosh create-release --force --timestamp-version
bosh upload-release || echo "continuing on..."

header "Deploying to BOSH-lite..."
cat <<EOF | spruce merge ci/manifest.yml - > .ci.yml
meta:
  aws:
    access_key: (( grab \$AWS_ACCESS_KEY ))
    secret_key: (( grab \$AWS_SECRET_KEY ))
EOF
bosh -n deploy .ci.yml
rm -f .ci.yml

header "Running the Phalanx test errand..."
bosh run-errand phalanx-tests

header "Cleaning up..."
bosh delete-deployment -n || echo "continuing on..."
bosh clean-up -n || echo "continuing on..."
popd &>/dev/null

echo
echo "SUCCESS"
exit 0
